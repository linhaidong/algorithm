!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
LEN	huffman.cpp	19;"	d	file:
MAX_LINE	huffman.cpp	18;"	d	file:
c	huffman.cpp	/^        char c;$/;"	m	struct:huffman_node	file:
destory_huffman_tree	huffman.cpp	/^void destory_huffman_tree(huffman_node *node){$/;"	f
get_huffman_code	huffman.cpp	/^int get_huffman_code(huffman_node *&node){$/;"	f
huffman_code	huffman.cpp	/^        char huffman_code[LEN];$/;"	m	struct:huffman_node	file:
huffman_node	huffman.cpp	/^struct huffman_node{$/;"	s	file:
huffman_tree_create	huffman.cpp	/^int huffman_tree_create(huffman_node *&root, map<char, int> &word){$/;"	f
left	huffman.cpp	/^        huffman_node * left;$/;"	m	struct:huffman_node	file:
main	huffman.cpp	/^int main(){$/;"	f
print_huffman_in	huffman.cpp	/^void print_huffman_in(huffman_node *node){$/;"	f
print_huffman_pre	huffman.cpp	/^void print_huffman_pre(huffman_node *node){$/;"	f
print_leaf	huffman.cpp	/^void print_leaf(huffman_node *node){$/;"	f
read_file	huffman.cpp	/^int read_file(FILE *fn, map<char, int> &word){$/;"	f
right	huffman.cpp	/^        huffman_node * right;$/;"	m	struct:huffman_node	file:
sort_by_weight	huffman.cpp	/^bool sort_by_weight(huffman_node * n1, huffman_node *n2)$/;"	f
weight	huffman.cpp	/^        int weight;$/;"	m	struct:huffman_node	file:
